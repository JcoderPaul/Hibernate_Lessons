****** Interface Predicate ******

Библиотека (пакет): java.util.function

Interface Predicate<T>

Параметры типа: T- тип входа в предикат
Функциональный интерфейс: Это функциональный интерфейс, поэтому его можно использовать в качестве
                          цели назначения для лямбда-выражения или ссылки на метод.

*******************************************************************************************************
@FunctionalInterface
public interface Predicate<T>
*******************************************************************************************************

Представляет предикат (логическую функцию) одного аргумента.
Это функциональный интерфейс , функциональным методом которого является test(Object).

*** МЕТОДЫ ***

------------------------------------------------------------------------------------------------------
default Predicate<T>
            and(Predicate<? super T> other) - Возвращает составной предикат, который представляет
                                              собой короткое логическое И этого предиката и другого.

                                              Если при оценке составленного предиката этот предикат
                                              равен false, то other предикат не оценивается.

                                              Любые исключения, возникшие во время оценки любого из
                                              предикатов, передаются вызывающей стороне; если при
                                              оценке этого предиката возникает исключение, 'other'
                                              предикат не будет оцениваться.

Параметры: 'other' - предикат, который будет логически объединен с этим (this) предикатом;
Возвращает: составленный предикат, который представляет собой короткое логическое И этого
            (this) предиката и other - предиката;

Исключения: NullPointerException- если другое равно null;

------------------------------------------------------------------------------------------------------
static <T> Predicate<T>
            isEqual(Object targetRef) - Возвращает предикат, который проверяет, равны ли два аргумента
                                        в соответствии с Objects.equals(Object, Object).

Параметры типа: T - тип аргументов предиката;
Параметры: targetRef - ссылка на объект для сравнения на равенство, которая может быть null;
Возвращает: предикат, который проверяет, равны ли два аргумента в соответствии с
            Objects.equals(Object, Object);

------------------------------------------------------------------------------------------------------
default Predicate<T>
            negate() - Возвращает предикат, представляющий логическое отрицание этого предиката.

Возвращает: предикат, представляющий логическое отрицание этого (this) предиката;

------------------------------------------------------------------------------------------------------
default Predicate<T>
            or(Predicate<? super T> other) - Возвращает составной предикат, который представляет
                                             собой короткое логическое ИЛИ этого предиката и другого.

                                             Если при оценке составленного предиката этот (this)
                                             предикат равен true, то 'other' предикат не оценивается.

                                             Любые исключения, возникшие во время оценки любого из
                                             предикатов, передаются вызывающей стороне; если при
                                             оценке этого (this) предиката возникает исключение, 'other'
                                             предикат не будет оцениваться.

Параметры: other - предикат, который будет логически объединен с этим предикатом;
Возвращает: составленный предикат, который представляет собой короткое логическое ИЛИ этого (this)
            предиката и 'other' предиката;

Исключения: NullPointerException- если другое равно null;

------------------------------------------------------------------------------------------------------
boolean	test(T t) - Оценивает этот предикат по заданному аргументу.

Параметры: t- входной аргумент;
Возвращает: true если входной аргумент соответствует предикату, иначе false;

------------------------------------------------------------------------------------------------------